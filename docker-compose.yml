version: "3.3"

services:

  addgw:
    build:
      context: .
    image: addplatform/add:add-addson-gw
    env_file: docker-compose.env
    command: sh -c "npm start"
    ports:
      - "5000:5000"
    environment:
      SERVICEDIR: src/services/add-core-gw-api
      PORT: 5000
    depends_on:
      - redis
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api-gw.rule=PathPrefix(`/`)"
      - "traefik.http.services.api-gw.loadbalancer.server.port=4000"
    links:
      - redis
    networks:
      - internal

  crm:
    build:
      context: .
    image: addplatform/add:add-addson-gw
    env_file: docker-compose.env
    command: sh -c "npm start"
    environment:
      SERVICEDIR: src/services/add-crm-home-api
    depends_on:
      - redis
      - usrm
    links:
      - redis
      - appm
    networks:
      - internal

  appm:
    build:
      context: .
    image: addplatform/add:add-addson-gw
    env_file: docker-compose.env
    command: sh -c "npm start"
    environment:
      SERVICEDIR: src/services/add-appm-home-api
    depends_on:
      - redis
    links:
      - redis
    networks:
      - internal

  usrm:
    build:
      context: .
    image: addplatform/add:add-addson-gw
    env_file: docker-compose.env
    command: sh -c "npm start"
    environment:
      SERVICEDIR: src/services/add-usrm-home-api
    depends_on:
      - redis
    links:
      - redis
    networks:
      - internal

  tax:
    build:
      context: .
    image: addplatform/add:add-addson-gw
    env_file: docker-compose.env
    command: sh -c "npm start"
    environment:
      SERVICEDIR: src/services/add-tax-home-app
    depends_on:
      - redis
    links:
      - redis

    networks:
      - internal

  tools:
    build:
      context: .
    image: addplatform/add:add-addson-gw
    env_file: docker-compose.env
    command: sh -c "apk add tesseract-ocr && git clone https://github.com/addvisor-app/add-ocr-por.git /usr/share/tessdata/git/ && mv /usr/share/tessdata/git/*.traineddata /usr/share/tessdata/ && npm start"
    environment:
      SERVICEDIR: src/services/add-base-tools-api
    depends_on:
      - redis
    links:
      - redis
    networks:
      - internal
  redis:
    image: redis:alpine
    networks:
      - internal

  traefik:
    image: traefik:2.4
    command:
      - '--api.insecure=true'
      - '--entryPoints.http.address=:80'
      - '--providers.docker=true'
      - '--providers.docker.exposedbydefault=false'
      - '--metrics.prometheus=true'
      - '--entryPoints.metrics.address=:8082'
      - '--metrics.prometheus.entryPoint=metrics'
    ports:
      - "4000:80"
      - "4001:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    restart: unless-stopped
    networks:
      - internal

networks:
  internal:

    null
volumes:
  data: null
